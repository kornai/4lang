interpretation syntacticTree: de.up.ling.irtg.algebra.TagTreeAlgebra
interpretation dependencyGraph: de.up.ling.irtg.algebra.graph.GraphAlgebra
interpretation fourlangGraph: de.up.ling.irtg.algebra.graph.GraphAlgebra

//input:
//NP2(NNP(Pierre),NNP(Vinken))

//UPPER NODES
//UPPER NODES

//entry point
S! -> sentence(NP)
[syntacticTree] ?1
[dependencyGraph] ?1
[fourlangGraph] ?1



//LOWER NODES
//LOWER NODES

//Basic NounPhrases
//Conmpound
NP -> compound(NN,NN)
[syntacticTree] NP2(?1,?2)
[dependencyGraph] merge(f_dependent(merge("(r<root> :compound (d<dependent>))",r_dependent(?1))),?2)
[fourlangGraph] merge(f_dependent(merge("(r<root> :comp (d<dependent>))",r_dependent(?1))),?2)



//LEAVES
//LEAVES

//Nouns
//Pierre
NN -> PierreNoun
[syntacticTree] NNP(Pierre)
[dependencyGraph] "(Pierre<root> / Pierre)"
[fourlangGraph] "(Pierre<root> / Pierre)"

//Vinken
NN -> VinkenNoun
[syntacticTree] NNP(Vinken)
[dependencyGraph] "(Vinken<root> / Vinken)"
[fourlangGraph] "(Vinken<root> / Vinken)"


