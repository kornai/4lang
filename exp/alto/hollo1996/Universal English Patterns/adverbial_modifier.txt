ADVERBIAL_MODIFIER :
	- Language.UniversalEnglish
	- "advmod"
	- "adverbial modifier"
	- MODIFIER
	- "VP|ADJP|WHADJP|ADVP|WHADVP|S|SBAR|SINV|SQ|SBARQ|XS|(?:WH)?(?:PP|NP)(?:-TMP|-ADV)?|RRC|CONJP|JJP|QP"
	- tregexCompiler

	//last term is to exclude "at least/most..."
	"/^(?:VP|ADJP|JJP|WHADJP|SQ?|SBARQ?|SINV|XS|RRC|(?:WH)?NP(?:-TMP|-ADV)?)$/ < (RB|RBR|RBS|WRB|ADVP|WHADVP=target !< " + NOT_PAT + " !< " + ETC_PAT + " [!<+(/ADVP/) (@ADVP < (IN < /(?i:at)/)) | !<+(/ADVP/) (@ADVP < NP)] )"
	"QP < IN|RB|RBR|RBS|PDT|DT|JJ|JJR|JJS|XS=target", //quantmod relation in original SD
	"QP < (MWE=target < (JJR|RBR|IN < /^(?i)(more|less)$/) < (IN < /^(?i)than$/))", //more than / less than
	// avoids adverb conjunctions matching as advmod; added JJ to catch How long
	// "!< no" so we can get neg instead for "no foo" when no is tagged as RB
	// we allow CC|CONJP as long as it is not between the target and the head
	// TODO: perhaps remove that last clause if we transform
	// more and more, less and less, etc.
	"ADVP|WHADVP < (RB|RBR|RBS|WRB|ADVP|WHADVP|JJ=target !< " + NOT_PAT + " !< /^(?i:no)$/ !< " + ETC_PAT + ") [ !< /^CC|CONJP$/ | ( <#__=head !< (/^CC|CONJP$/ [ ($++ =head $-- =target) | ($-- =head $++ =target) ])) ]"
	//this one gets "at least" advmod(at, least) or "fewer than" advmod(than, fewer)
	"SBAR < (WHNP=target < WRB)"
	- "SBARQ <, WHADVP=target"
	- "XS < JJ=target"
	// for PP, only ones before head, or after NP, since others afterwards are pcomp
	"/(?:WH)?PP(?:-TMP|-ADV)?$/ <# (__ $-- (RB|RBR|RBS|WRB|ADVP|WHADVP=target !< " + NOT_PAT + " !< " + ETC_PAT + "))"
	"/(?:WH)?PP(?:-TMP|-ADV)?$/ < @NP|WHNP < (RB|RBR|RBS|WRB|ADVP|WHADVP=target !< " + NOT_PAT + " !< " + ETC_PAT + ")"
	"CONJP < (RB=target !< " + NOT_PAT + " !< " + ETC_PAT + ")"

* The "adverbial modifier" grammatical relation. An adverbial
* modifier of a word is a (non-clausal) RB or ADVP that serves to modify
* the meaning of the word.<p>
* <p/>
* Examples: <br/>
* "genetically modified food" &rarr;
* {@code advmod}(modified, genetically) <br/>
* "less often" &rarr;
* {@code advmod}(often, less)F
